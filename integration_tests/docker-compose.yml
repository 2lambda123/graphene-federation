version: '2.1'
services:
  service_a:
    build: service_a/.
    container_name: federation_service_a
    volumes:
      - ./service_a/src:/project/src
      - ../:/project/federation_deps
    command: sh -c "pip install -e ./federation_deps && python ./src/app.py"
    healthcheck:
      test: curl http://0.0.0.0:5000/graphql -H "Content-Type:application/json" --data '{"query":"{__schema { types {name} }}"}'
      interval: 1s
      timeout: 10s
      retries: 20

  service_b:
    build: service_b/.
    container_name: federation_service_b
    volumes:
      - ./service_b/src:/project/src
      - ../:/project/federation_deps
    command: sh -c "pip install -e ./federation_deps && python ./src/app.py"
    healthcheck:
      test: curl http://0.0.0.0:5000/graphql -H "Content-Type:application/json" --data '{"query":"{__schema { types {name} }}"}'
      interval: 1s
      timeout: 10s
      retries: 20

  service_c:
    build: service_c/.
    container_name: federation_service_c
    volumes:
      - ./service_c/src:/project/src
      - ../:/project/federation_deps
    command: sh -c "pip install -e ./federation_deps && python ./src/app.py"
    healthcheck:
      test: curl http://0.0.0.0:5000/graphql -H "Content-Type:application/json" --data '{"query":"{__schema { types {name} }}"}'
      interval: 1s
      timeout: 10s
      retries: 20

  service_d:
    build: service_d/.
    container_name: federation_service_d
    volumes:
      - ./service_d/src:/project/src
      - ../:/project/federation_deps
    command: sh -c "pip install -e ./federation_deps && python ./src/app.py"
    healthcheck:
      test: curl http://0.0.0.0:5000/graphql -H "Content-Type:application/json" --data '{"query":"{__schema { types {name} }}"}'
      interval: 1s
      timeout: 10s
      retries: 20

  gateway:
    build: gateway/.
    container_name: federation_gateway
    volumes:
      - ./gateway/src:/project/src
    ports:
      - 3000:3000
    healthcheck:
      test: curl -f http://localhost:3000/.well-known/apollo/server-health
      interval: 3s
      timeout: 10s
      retries: 5
    depends_on:
      service_a:
        condition: service_healthy
      service_b:
        condition: service_healthy
      service_c:
        condition: service_healthy
      service_d:
        condition: service_healthy

  proxy_dep:
    image: busybox
    depends_on:
      gateway:
        condition: service_healthy

  tests:
    build: tests/.
    volumes:
      - ./tests:/project/tests
    depends_on:
      - proxy_dep
